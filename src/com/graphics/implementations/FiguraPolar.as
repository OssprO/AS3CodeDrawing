package  com.graphics.implementations{		import flash.display.Sprite;	import flash.geom.Point;		import com.maths.OPGeometrica;	import com.maths.OPTrigonometrica;

	public class FiguraPolar extends Sprite implements IFiguraPolar{		protected var _radio:Number;		protected var _divisiones:Number;		protected var _gradosPorSegmento:Number;		protected var _radianesPorSegmento:Number;		protected var _puntosX:Array;		protected var _puntosY:Array;		public function FiguraPolar(radio:Number, divisiones:Number):void {			_radio = radio;			_divisiones = divisiones;		}				public function init():void{			trace("Error: Clase Abstracta");		}		public function set radio(v_radio:Number):void{			_radio = v_radio;		}		public function get radio():Number{			return _radio;		}		public function set divisiones(v_divisiones:Number):void{			_divisiones = v_divisiones;		}		public function get divisiones():Number{			return _divisiones;		}				public function get gradosPorSegmento():Number{			_gradosPorSegmento = OPTrigonometrica.divisioncirculo(_divisiones);			return _gradosPorSegmento;		}		public function get radianesPorSegmento():Number{			_radianesPorSegmento = OPGeometrica.toRadians(OPTrigonometrica.divisioncirculo(_divisiones));			return _radianesPorSegmento;		}		public function get puntosX():Array{			_puntosX = new Array();			for(var i:int=0;i<_divisiones;i++){				_puntosX[i] = Point.polar(_radio,OPGeometrica.toRadians(OPTrigonometrica.divisioncirculo(_divisiones))*i).x;			}			return _puntosX;		}		public function get puntosY():Array{			_puntosY = new Array();			for(var j:int=0;j<_divisiones;j++){				_puntosY[j] = Point.polar(_radio,OPGeometrica.toRadians(OPTrigonometrica.divisioncirculo(_divisiones))*j).y;			}			return _puntosY;		}	}}