package com.graphics{	import flash.display.Sprite;	import flash.geom.Point;	import com.graphics.implementations.FiguraPolar;	import com.graphics.implementations.IFiguraPolar;	import com.graphics.Petalo;	import com.maths.OPGeometrica;	import com.maths.OPTrigonometrica;		public class Flor extends FiguraPolar implements IFiguraPolar{				private var _color:uint;				public function Flor(radio:Number, divisiones:Number, color:uint):void {			super(radio, divisiones);						_color = color;						init();					}		override public function init():void{			var dist_bolitas:Number = OPTrigonometrica.distanciadospuntos(radianesPorSegmento,radio);			var radio_normalizado:Number = OPTrigonometrica.catetoadyacente(radianesPorSegmento/2,dist_bolitas);			var p_inicio_petalo:Point = Point.polar(radio_normalizado,radianesPorSegmento/2);			var p_cero:Point = new Point(0,0);						for(var i:int=1;i<=divisiones;i++){				var p_translado_bolita:Point = Point.polar(radio,radianesPorSegmento*i);				var p_translado_pet:Point = Point.polar(radio*.97,radianesPorSegmento/2+radianesPorSegmento*i);				var p_origen_uno:Point = new Point(p_translado_pet.x,p_translado_pet.y);								var petalo:Petalo = new Petalo(p_cero, radio_normalizado, gradosPorSegmento/4, _color);				petalo.x = petalo.x + p_translado_pet.x;				petalo.y = petalo.y + p_translado_pet.y;				this.addChild(petalo);										var pcir1:Point = new Point(petalo.x,petalo.y);				var pcir2:Point = new Point(petalo.x + p_translado_pet.x,petalo.y + p_translado_pet.y);										var pendiente_linea:Number = OPGeometrica.pendiente(p_cero,p_translado_pet);				var grados_rotacion:Number = OPGeometrica.toDregree(OPGeometrica.angulo(pendiente_linea));										if((petalo.x <= 0 && petalo.y <=0) || (petalo.x < 0 && petalo.y > 0)){					petalo.rotation = OPGeometrica.toDregree(OPGeometrica.angulo(pendiente_linea))-90;				}				else{					petalo.rotation = OPGeometrica.toDregree(OPGeometrica.angulo(pendiente_linea))+90;				}				petalo.blendMode = "multiply";			}//Fin For		}		public function get color():uint
		{
			return _color;
		}		public function set color(value:uint):void
		{
			_color = value;
		}					}	}